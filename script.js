document.addEventListener('DOMContentLoaded', () => {

    // --- –í–°–ï –≠–õ–ï–ú–ï–ù–¢–´ ---
    const backgroundMusic = document.getElementById('background-music');
    const purrSound = document.getElementById('purr-sound');
    const musicToggleButton = document.getElementById('music-toggle');
    const catContainer = document.getElementById('cat-container'); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    const cat = document.getElementById('cat'); // –°–∞–º –∫–æ—Ç –¥–ª—è –∫–ª–∏–∫–∞
    const catBubble = document.getElementById('cat-bubble'); // –û–±–ª–∞—á–∫–æ –¥–ª—è —Ñ—Ä–∞–∑
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navToggleBtn = document.getElementById('nav-toggle-btn');
    const dropdownNav = document.querySelector('.dropdown-nav'); // –ü–æ–ª—É—á–∞–µ–º —Å–∞–º dropdown-nav
    const dropdownNavContent = document.getElementById('dropdown-nav-content');
    const navLinks = dropdownNavContent.querySelectorAll('.nav-link'); // –¢–µ–ø–µ—Ä—å —Å—Å—ã–ª–∫–∏ –≤–Ω—É—Ç—Ä–∏ dropdown
    const pages = document.querySelectorAll('.page'); // –°—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–∫–∏–º–∏ –∂–µ

    // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –Ω–æ–≤–µ–ª–ª—ã
    const chapters = document.querySelectorAll('.chapter');
    const prevChapterBtn = document.getElementById('prev-chapter');
    const nextChapterBtn = document.getElementById('next-chapter');
    let currentChapterIndex = 0; 

    // --- –ù–ê–°–¢–†–û–ô–ö–ò –ì–†–û–ú–ö–û–°–¢–ò ---
    backgroundMusic.volume = 0.15;
    purrSound.volume = 1.0;

    // --- –§–†–ê–ó–´ –ö–û–¢–ê ---
    const catPhrases = [
        "–ú—Ä—Ä—Ä... –ü—Ä–∏–≤–µ—Ç, —Ö–æ–∑—è–π–∫–∞!",
        "–Ø —Ç—É—Ç –∑–∞–¥—É–º–∞–ª—Å—è –æ –≤–µ—á–Ω–æ—Å—Ç–∏... –∏ –æ –≤–∫—É—Å–Ω—è—à–∫–∞—Ö.",
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç Soul. –ù–æ –±—Ä–∞—Ç–∞–Ω –≤–µ–ª–∏—á–∞–µ—Ç –º–µ–Ω—è –ü–∏–∑–¥—é–∫ :)",
        "–•–æ–∑—è–π–∫–∞, —è –ª—é–±–ª—é —Ç–µ–±—è!",
        "–í–µ—Ä–∏—à—å –Ω–µ—Ç, —è –∑–∞–±—ã–ª, –∫–æ–≥–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –µ–ª...",
        "–ú—è—É?",
        "–°–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ –≤–º–µ—Å—Ç–µ —Å —Ö–æ–∑—è–∏–Ω–æ–º.",
        "–≠—Ç–æ —Å–ª–æ–∂–Ω—ã–π —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å. –õ—É—á—à–µ –¥–∞–≤–∞–π –æ –µ–¥–µ.",
        "–Ø –ø—Ä–æ—Å—Ç–æ –∫–æ—Ç. –Ø –Ω–µ –º–æ–≥—É –≤—Å–µ –æ–±—ä—è—Å–Ω–∏—Ç—å."
    ];

    let phraseInterval; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Ñ—Ä–∞–∑


    // --- –§–£–ù–ö–¶–ò–ò –ù–û–í–ï–õ–õ–´ ---
    function showChapter(index) {
        chapters.forEach((chapter, i) => {
            if (i === index) {
                chapter.classList.add('active-chapter');
            } else {
                chapter.classList.remove('active-chapter');
            }
        });

        if (prevChapterBtn) prevChapterBtn.disabled = index === 0;
        if (nextChapterBtn) nextChapterBtn.disabled = index === chapters.length - 1;

        localStorage.setItem('currentNovelChapter', index);
    }

    // --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ---

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (navToggleBtn && dropdownNav) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–æ–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        navToggleBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª–æ—Å—å —Å—Ä–∞–∑—É
            dropdownNav.classList.toggle('active');
        });

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (event) => {
            if (dropdownNav && !dropdownNav.contains(event.target)) {
                dropdownNav.classList.remove('active');
            }
        });
    }


    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫–∏ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é
    navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = link.getAttribute('href');
            const targetPage = document.querySelector(targetId);
            
            navLinks.forEach(l => l.classList.remove('active'));
            pages.forEach(p => p.classList.remove('active'));
            
            link.classList.add('active');
            if (targetPage) {
                targetPage.classList.add('active');
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
            if (dropdownNav) {
                dropdownNav.classList.remove('active');
            }

            // –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ–≤–µ–ª–ª—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –µ–µ –≤–∫–ª–∞–¥–∫—É
            if (targetId === '#novel') {
                const savedChapterIndex = localStorage.getItem('currentNovelChapter');
                currentChapterIndex = savedChapterIndex !== null ? parseInt(savedChapterIndex, 10) : 0;
                showChapter(currentChapterIndex);
            } else {
                chapters.forEach(chapter => chapter.classList.remove('active-chapter'));
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º—É—Ä—á–∞–Ω–∏—è –∫–æ—Ç–∞
    if (cat) {
        cat.addEventListener('click', (e) => {
            e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ–º
            if (!purrSound.paused) { 
                purrSound.pause();
                purrSound.currentTime = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–∞—á–∏–Ω–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞
            } else { 
                purrSound.play();
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É –ø–æ –∫–ª–∏–∫—É, –µ—Å–ª–∏ —É–∂–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç
            if (catBubble && !catBubble.classList.contains('show')) {
                displayCatPhrase();
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Ñ—Ä–∞–∑—ã –∫–æ—Ç–∞
    function displayCatPhrase() {
        if (!catBubble) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–ª–∞—á–∫–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const randomIndex = Math.floor(Math.random() * catPhrases.length);
        catBubble.textContent = catPhrases[randomIndex];
        catBubble.classList.add('show');

        // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            catBubble.classList.remove('show');
        }, 5000);
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ñ—Ä–∞–∑ –∫–æ—Ç–∞ –∫–∞–∂–¥—ã–µ 15-25 —Å–µ–∫—É–Ω–¥
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
    if (phraseInterval) clearInterval(phraseInterval);
    phraseInterval = setInterval(() => {
        if (catBubble && !catBubble.classList.contains('show')) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ
            displayCatPhrase();
        }
    }, Math.random() * (25000 - 15000) + 15000); // –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç 15 –¥–æ 25 —Å–µ–∫—É–Ω–¥


    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–æ–π
    if (musicToggleButton) {
        musicToggleButton.addEventListener('click', () => {
            if (backgroundMusic.paused) { backgroundMusic.play(); musicToggleButton.textContent = 'üéµ'; } 
            else { backgroundMusic.pause(); musicToggleButton.textContent = 'üîá'; }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–æ–≤–µ–ª–ª—ã
    if (prevChapterBtn) {
        prevChapterBtn.addEventListener('click', () => {
            if (currentChapterIndex > 0) {
                currentChapterIndex--;
                showChapter(currentChapterIndex);
            }
        });
    }

    if (nextChapterBtn) {
        nextChapterBtn.addEventListener('click', () => {
            if (currentChapterIndex < chapters.length - 1) {
                currentChapterIndex++;
                showChapter(currentChapterIndex);
            }
        });
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let musicStarted = false;
    function playMusic() {
        if (!musicStarted) {
            backgroundMusic.play().then(() => {
                musicStarted = true; 
                if (musicToggleButton) musicToggleButton.textContent = 'üéµ';
            }).catch(error => { 
                if (musicToggleButton) musicToggleButton.textContent = 'üîá'; 
                console.log("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.");
            });
        }
    }
    document.body.addEventListener('click', playMusic, { once: true });
    document.body.addEventListener('keydown', playMusic, { once: true });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≥–ª–∞–≤—É –Ω–æ–≤–µ–ª–ª—ã
    const initialActivePage = document.querySelector('.nav-link.active');
    if (initialActivePage) {
        const targetId = initialActivePage.getAttribute('href');
        const targetPage = document.querySelector(targetId);
        if (targetPage) {
            targetPage.classList.add('active');
        }

        if (targetId === '#novel') {
            const savedChapterIndex = localStorage.getItem('currentNovelChapter');
            currentChapterIndex = savedChapterIndex !== null ? parseInt(savedChapterIndex, 10) : 0;
            showChapter(currentChapterIndex);
        } else {
            chapters.forEach(chapter => chapter.classList.remove('active-chapter'));
        }
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º "–ì–ª–∞–≤–Ω–∞—è"
        document.querySelector('a[href="#home"]').click(); 
    }


    // --- –õ–û–ì–ò–ö–ê –ü–ï–†–ï–¢–ê–°–ö–ò–í–ê–ù–ò–Ø –ö–û–¢–ê ---
    let isDragging = false;
    let offsetX, offsetY;

    if (catContainer) {
        catContainer.addEventListener('mousedown', (e) => {
            // –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –ø–æ catContainer, –Ω–æ –Ω–µ –ø–æ —Å–∞–º–æ–º—É –∫–æ—Ç—É
            // e.target - —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å–æ–±—ã—Ç–∏–µ
            if (e.target === catContainer || !cat.contains(e.target)) {
                isDragging = true;
                catContainer.classList.add('dragging');
                offsetX = e.clientX - catContainer.getBoundingClientRect().left;
                offsetY = e.clientY - catContainer.getBoundingClientRect().top;
                e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞)
            }
        });

        document.addEventListener('mousemove', (e) => {
            if (!isDragging) return;

            let newX = e.clientX - offsetX;
            let newY = e.clientY - offsetY;

            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —ç–∫—Ä–∞–Ω–∞
            newX = Math.max(0, Math.min(newX, window.innerWidth - catContainer.offsetWidth));
            newY = Math.max(0, Math.min(newY, window.innerHeight - catContainer.offsetHeight));

            catContainer.style.left = newX + 'px';
            catContainer.style.top = newY + 'px';
            catContainer.style.right = 'auto'; // –û—Ç–∫–ª—é—á–∞–µ–º right, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª —Å left
            catContainer.style.bottom = 'auto'; // –û—Ç–∫–ª—é—á–∞–µ–º bottom, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª —Å top
        });

        document.addEventListener('mouseup', () => {
            if (isDragging) {
                isDragging = false;
                catContainer.classList.remove('dragging');
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ localStorage, —á—Ç–æ–±—ã –∫–æ—Ç –æ—Å—Ç–∞–≤–∞–ª—Å—è –Ω–∞ –º–µ—Å—Ç–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                localStorage.setItem('catPosX', catContainer.style.left);
                localStorage.setItem('catPosY', catContainer.style.top);
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∫–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const savedCatPosX = localStorage.getItem('catPosX');
        const savedCatPosY = localStorage.getItem('catPosY');

        if (savedCatPosX && savedCatPosY) {
            catContainer.style.left = savedCatPosX;
            catContainer.style.top = savedCatPosY;
            catContainer.style.right = 'auto';
            catContainer.style.bottom = 'auto';
        } else {
            // –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å—Ç–∏–ª–∏
            catContainer.style.right = '20px';
            catContainer.style.bottom = '10px';
            catContainer.style.left = 'auto';
            catContainer.style.top = 'auto';
        }

        // –î–ª—è —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–º–æ–±–∏–ª—å–Ω—ã—Ö)
        catContainer.addEventListener('touchstart', (e) => {
            if (e.target === catContainer || !cat.contains(e.target)) {
                isDragging = true;
                catContainer.classList.add('dragging');
                const touch = e.touches[0];
                offsetX = touch.clientX - catContainer.getBoundingClientRect().left;
                offsetY = touch.clientY - catContainer.getBoundingClientRect().top;
                e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏
            }
        });

        document.addEventListener('touchmove', (e) => {
            if (!isDragging) return;
            const touch = e.touches[0];
            let newX = touch.clientX - offsetX;
            let newY = touch.clientY - offsetY;

            newX = Math.max(0, Math.min(newX, window.innerWidth - catContainer.offsetWidth));
            newY = Math.max(0, Math.min(newY, window.innerHeight - catContainer.offsetHeight));

            catContainer.style.left = newX + 'px';
            catContainer.style.top = newY + 'px';
            catContainer.style.right = 'auto';
            catContainer.style.bottom = 'auto';
            e.preventDefault();
        });

        document.addEventListener('touchend', () => {
            if (isDragging) {
                isDragging = false;
                catContainer.classList.remove('dragging');
                localStorage.setItem('catPosX', catContainer.style.left);
                localStorage.setItem('catPosY', catContainer.style.top);
            }
        });
    }
});
